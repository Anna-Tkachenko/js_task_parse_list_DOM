{"version":3,"sources":["scripts/main.js"],"names":["listOfEmployees","document","querySelector","sortedEmployees","sortList","list","children","sort","firstEmployee","secondEmployee","convertSalaryToNumber","dataset","salary","replace","getEmployees","employeesList","map","employee","name","innerText","position","age","forEach","append"],"mappings":";AAAA,aA8BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5BD,IAAMA,EAAkBC,SAASC,cAAc,MACzCC,EAAkBC,EAASJ,GAQjC,SAASI,EAASC,GACT,OAAA,EAAIA,EAAKC,UACbC,KAAK,SAACC,EAAeC,GACpBC,OAAAA,EAAsBD,EAAeE,QAAQC,QAC3CF,EAAsBF,EAAcG,QAAQC,UAIpD,SAASF,EAAsBE,GACtB,OAACA,EAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAG/C,SAASC,EAAaC,GACb,OAAA,EAAIA,EAAcT,UAAUU,IAAI,SAAAC,GAAa,MAAA,CAClDC,KAAMD,EAASE,UACfC,SAAUH,EAASN,QAAT,SACVC,OAAQK,EAASN,QAAT,OACRU,IAAKJ,EAASN,QAAT,OAvBTR,EAAgBmB,QAAQ,SAAAL,GACtBjB,OAAAA,EAAgBuB,OAAON,KAGzBH,EAAad","file":"main.188edfee.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listOfEmployees = document.querySelector('ul');\nconst sortedEmployees = sortList(listOfEmployees);\n\nsortedEmployees.forEach(employee => (\n  listOfEmployees.append(employee)\n));\n\ngetEmployees(listOfEmployees);\n\nfunction sortList(list) {\n  return [...list.children]\n    .sort((firstEmployee, secondEmployee) => (\n      convertSalaryToNumber(secondEmployee.dataset.salary)\n      - convertSalaryToNumber(firstEmployee.dataset.salary)\n    ));\n}\n\nfunction convertSalaryToNumber(salary) {\n  return +salary.replace('$', '').replace(',', '');\n}\n\nfunction getEmployees(employeesList) {\n  return [...employeesList.children].map(employee => ({\n    name: employee.innerText,\n    position: employee.dataset['position'],\n    salary: employee.dataset['salary'],\n    age: employee.dataset['age'],\n  }));\n}\n"]}